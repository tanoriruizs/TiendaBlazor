@page "/Login"
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager Navigation

<style>

</style>

<div class="fullscreen-div">
    <div class="container">
        <div class="logo text-center">
            <img src="/img/logo.png" alt="Logo" />
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-md-4 login-container">
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger text-center">@ErrorMessage</div>
            }

            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <InputText @bind-Value="loginModel.Email" id="email" class="form-control mx-auto" placeholder="Email" />
                </div>
                <div class="mb-4">
                    <InputText @bind-Value="loginModel.Password" id="contraseña" type="password" class="form-control mx-auto" placeholder="Contraseña" />
                </div>
                <button type="submit" class="btn btn-primary btn-block">Ingresar</button>
            </EditForm>

            <div class="text-center container-info">
                <p>¿Aún no tienes cuenta?</p>
                <a href="/register" class="text-decoration-none">Regístrate</a>
            </div>

            <div class="footer text-center mt-4">
                <p>Sebastian Gpe Tanori Ruiz | tanoriruizs@gmail.com</p>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string? ErrorMessage;

    private class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    private async Task HandleLogin()
    {
        var queryParams = new Dictionary<string, string>
        {
            { "email", loginModel.Email },
            { "password", loginModel.Password }
        };

        var queryString = string.Join("&", queryParams.Select(kvp => $"{kvp.Key}={Uri.EscapeDataString(kvp.Value)}"));

        Navigation.NavigateTo($"/authenticate?{queryString}", forceLoad: true);
    }
}
