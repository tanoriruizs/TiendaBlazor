@page "/register"
@using BlazorWeb.Models
@using TiendaBlazor.Data

<div class="row justify-content-center">
    <div class="col-md-6">
        <h3 class="text-center">Crear Cuenta</h3>

        <div class="mb-3">
            <label for="correo" class="form-label">Correo electrónico</label>
            <input @bind="correo" id="correo" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="contraseña" class="form-label">Contraseña</label>
            <input @bind="contraseña" id="contraseña" type="password" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="confirmarContraseña" class="form-label">Confirmar Contraseña</label>
            <input @bind="confirmarContraseña" id="confirmarContraseña" type="password" class="form-control" />
        </div>
        <button @onclick="HandleRegister" class="btn btn-primary btn-block">Registrar</button>

        @if (registrationFailed)
        {
            <div class="alert alert-danger mt-3 text-center">Error al crear la cuenta. Inténtalo de nuevo.</div>
        }

        @if (passwordsDoNotMatch)
        {
            <div class="alert alert-danger mt-3 text-center">Las contraseñas no coinciden.</div>
        }
    </div>
</div>

@code {
    private string correo;
    private string contraseña;
    private string confirmarContraseña;
    private bool registrationFailed;
    private bool passwordsDoNotMatch;

    [Inject]
    private ApplicationDbContext _context { get; set; }

    [Inject]
    private NavigationManager Navigation { get; set; }

    private async Task HandleRegister()
    {
        passwordsDoNotMatch = contraseña != confirmarContraseña;

        if (!passwordsDoNotMatch)
        {
            try
            {
                var newUser = new Usuario
                    {
                        Correo = correo,
                        Contraseña = contraseña,
                        Rol = "Cliente"
                    };

                _context.Usuarios.Add(newUser);
                await _context.SaveChangesAsync();

                Navigation.NavigateTo("/login");
            }
            catch
            {
                registrationFailed = true;
            }
        }
    }
}
